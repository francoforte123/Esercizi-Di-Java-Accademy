//non riesco a capire dove ho sbagliato, quando hai la possibilitÃ , spiegamelo

https://www.hackerrank.com/challenges/java-lambda-expressions/problem?isFullScreen=true



import java.io.*;
import java.util.*;
interface PerformOperation {
 boolean check(int a);
}
class MyMath {
 public static boolean checker(PerformOperation p, int num) {
  return p.check(num);
 }
    PerformOperation isOdd(){
        PerformOperation pOperation= (num)->{
            if (num%2==0) {
                return false;
            }
            else{
                return true;
            }
        };
        return pOperation;
    }
    
    PerformOperation isPrime(){
        PerformOperation performOperation= (num)->{
            if(num==1) return true;
            for (int i = 2; i < num; i++) {
                if(num%2==0){
                    return false;
                }
                if(num<2){
                    return false;
                }
                return true;
            }     
        };
        return performOperation;
    }
    
      
    PerformOperation isPalindrome(){
        PerformOperation performOperation= (num)->{    
            String valueOfString= String.valueOf(num);        
            StringBuilder stringBuilder= new StringBuilder();
            stringBuilder.append(valueOfString);
            stringBuilder.reverse();
            
            if(stringBuilder.equals(num)){
                return true;
            }
            else{
                return false;
            }
        };
        return performOperation;
    }
    
    
}
public class Solution {

 public static void main(String[] args) throws IOException {
  MyMath ob = new MyMath();
  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
  int T = Integer.parseInt(br.readLine());
  PerformOperation op;
  boolean ret = false;
  String ans = null;
  while (T--> 0) {
   String s = br.readLine().trim();
   StringTokenizer st = new StringTokenizer(s);
   int ch = Integer.parseInt(st.nextToken());
   int num = Integer.parseInt(st.nextToken());
   if (ch == 1) {
    op = ob.isOdd();
    ret = ob.checker(op, num);
    ans = (ret) ? "ODD" : "EVEN";
   } else if (ch == 2) {
    op = ob.isPrime();
    ret = ob.checker(op, num);
    ans = (ret) ? "PRIME" : "COMPOSITE";
   } else if (ch == 3) {
    op = ob.isPalindrome();
    ret = ob.checker(op, num);
    ans = (ret) ? "PALINDROME" : "NOT PALINDROME";

   }
   System.out.println(ans);
  }
 }
}
